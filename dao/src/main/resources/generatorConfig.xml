<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>

    <properties resource="filters/filter-dev.properties"/>

    <context id="mysql" targetRuntime="MyBatis3">

        <!-- 生成的Java文件的编码 -->
        <property name="javaFileEncoding" value="UTF-8"/>
        <!-- 格式化java代码 -->
        <property name="javaFormatter" value="org.mybatis.generator.api.dom.DefaultJavaFormatter"/>
        <!-- 格式化XML代码 -->
        <property name="xmlFormatter" value="org.mybatis.generator.api.dom.DefaultXmlFormatter"/>

        <!-- beginningDelimiter和endingDelimiter：指明数据库的用于标记数据库对象名的符号，MYSQL默认是`反引号； -->
        <property name="beginningDelimiter" value="`"/>
        <property name="endingDelimiter" value="`"/>

        <plugin type="org.mybatis.generator.plugins.EqualsHashCodePlugin"/>
        <plugin type="org.mybatis.generator.plugins.SerializablePlugin"/>
        <plugin type="org.mybatis.generator.plugins.ToStringPlugin"/>
        <plugin type="org.mybatis.generator.plugins.FluentBuilderMethodsPlugin"/>


        <!-- 设置注释信息 -->
        <commentGenerator type="com.smikevon.easy.mbg.custom.CustomCommentGenerator">
            <property name="addRemarkComments" value="true"/>
            <property name="dateFormat" value="yyyy/MM/dd"/>
        </commentGenerator>

        <jdbcConnection driverClass="${jdbc.driverClass}"
                        connectionURL="${jdbc.connUrl}"
                        userId="${jdbc.userName}"
                        password="${jdbc.passWord}">
        </jdbcConnection>

        <!-- 涉及到DB中存在 DECIMAL 和 NUMERIC 类型时，用 BigDecimal 类型进行映射 -->
        <javaTypeResolver>
            <property name="forceBigDecimals" value="true"/>
        </javaTypeResolver>

        <!-- 标准写法 targetProject 应为 MAVEN,这里为了便于验证，将路径直接写到目的文件夹  -->
        <javaModelGenerator targetPackage="com.smikevon.easy.model.entity" targetProject="../model/src/main/java">
            <!-- 在targetPackage的基础上，根据数据库的schema再生成一层package，最终生成的类放在这个package下，默认为false -->
            <property name="enableSubPackages" value="true"/>
            <property name="trimStrings" value="true"/>
        </javaModelGenerator>

        <sqlMapGenerator targetPackage="mappers/generated" targetProject="src/main/resources">
            <property name="enableSubPackages" value="true"/>
        </sqlMapGenerator>

        <!-- 默认这里填 XMLMAPPER -->
        <javaClientGenerator type="com.smikevon.easy.mbg.custom.CustomJavaMapperGenerator"
                             targetPackage="com.smikevon.easy.mbg.mapper" targetProject="src/main/java">
            <property name="rootInterface" value="com.smikevon.easy.mbg.mapper.BaseMapper"/>
        </javaClientGenerator>

        <!-- 禁止物理删除数据 -->
        <table tableName="%" enableDeleteByExample="false" enableDeleteByPrimaryKey="false">
            <!-- 将下划线命名的 table column，转换为驼峰命名 -->
            <property name="useActualColumnNames" value="false"/>

            <!-- 在生成的 insert 和 update 语句中，不在设定这两个字段，依据 column default 值设定 -->
            <columnOverride column="create_time" isGeneratedAlways="true"/>
            <columnOverride column="update_time" isGeneratedAlways="true"/>

            <columnOverride column="opt_type" javaType="com.smikevon.easy.model.enums.OptType"/>
            <columnOverride column="is_delete" javaType="com.smikevon.easy.model.enums.DeleteType"/>
        </table>
    </context>

</generatorConfiguration>